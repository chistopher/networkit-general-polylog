language: generic

env:
  global:
    - export OMP_NUM_THREADS=2
    - export CXX_STANDARD=11

matrix:
  include:
    - name: Linux, modern GCC
      env: CC=gcc-8 CXX=g++-8
      os: linux
      addons: &gcc8
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - python3-pip
            - python3.4-venv

    - name: macOS, modern Clang
      env: CC=/usr/local/opt/llvm/bin/clang
      env: CXX=/usr/local/opt/llvm/bin/clang++
      env: ALLOW_TRAVIS_FAILURE=1
      os: osx
      sudo: false
      before_install:
        - brew update
        - brew install llvm
        - brew install libomp
        - if brew outdated | grep -q python; then brew upgrade python; fi

    - name: Linux, legacy GCC 4.9
      env: CC=gcc-4.9 CXX=g++-4.9
      os: linux
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - g++-4.9
            - python3-pip
            - python3.4-venv

    - name: Linux, legacy Clang 3.8
      env: CC="clang-3.8" CXX="clang++-3.8"
      os: linux
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.8
            - libiomp-dev
            - python3-pip
            - python3.4-venv

    - name: macOS (xcode8), GCC 6
      env: CC=gcc-6 CXX=g++-6
      os: osx
      osx_image: xcode8
      sudo: false
      before_install:
        - brew update
        - brew cask uninstall --force oclint # See https://github.com/travis-ci/travis-ci/issues/8826 for details.
        - brew install gcc@6
        - if brew outdated | grep -q python; then brew upgrade python; fi

    - name: macOS, legacy Clang 4
      env: CC=/usr/local/opt/llvm@4/bin/clang
      env: CXX=/usr/local/opt/llvm@4/bin/clang++
      env: ALLOW_TRAVIS_FAILURE=1
      os: osx
      sudo: false
      before_install:
        - brew update
        - brew install llvm@4
        - brew install libomp
        - if brew outdated | grep -q python; then brew upgrade python; fi


    - name: C++14 conformance
      env: CC=gcc-8 CXX=g++-8 CXX_STANDARD=14
      os: linux
      addons: *gcc8

    - name: C++17 conformance
      env: CC=gcc-8 CXX=g++-8 CXX_STANDARD=17
      os: linux
      addons: *gcc8
  
  allow_failures:
      env: ALLOW_TRAVIS_FAILURE=1

script:
 - $CXX --version
 - python3 --version

 - python3 -m venv pyenv && . pyenv/bin/activate
 - pip3 install --upgrade pip
 # cython is required because git does not contain _NetworKit.
 # ipython is required for tests.
 - pip3 install cython ipython
 - NETWORKIT_PARALLEL_JOBS=2 travis_wait pip3 install -e .
 - python3 -m unittest discover -v networkit/test/

 - mkdir debug_test && cd "$_"
 - cmake -DNETWORKIT_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug -DNETWORKIT_CXX_STANDARD=$CXX_STANDARD ..
 - make -j2
 - ctest -V
 - cd .. && rm -rf debug_test

 - mkdir release_test && cd "$_"
 - cmake -DNETWORKIT_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -DNETWORKIT_CXX_STANDARD=$CXX_STANDARD ..
 - make -j2
 - ctest -V
 - cd .. && rm -rf release_test

 - mkdir build_non_monolith && cd "$_"
 - cmake -DNETWORKIT_MONOLITH=OFF -DCMAKE_BUILD_TYPE=Debug -DNETWORKIT_CXX_STANDARD=$CXX_STANDARD ..
 - make -j2
 - cd .. && rm -rf build_non_monolith

notifications:
  email: false
